mean(10:12)
#Step 2: Variable assiment
?plot
myvar <- 42
myvar2 <- 35.25
myvar+100
myvar + myvar2 - 12
m <- myvar + myvar2 - 12
myvar3^2 <- myvar2*myvar
myvar2 > 200
my <- m==myvar
var1 <- 3
print(var2)
var2 <- var1 * 10
print(var2)
var2 <- var1 * 10
print(var2)
var2 <- var1 * 10
print(var2)
var2 <- var1 * 10
print(var2)
source('~/R/ExecutionCodeНовосиб/estimate_model.R')
source('~/R/ExecutionCodeНовосиб/filtered_temp.R')
source('~/R/ExecutionCodeНовосиб/Luminosity.R')
source('~/R/ExecutionCodeНовосиб/model_initialization.R')
source('~/R/ExecutionCodeНовосиб/Voronezh.R')
source('~/R/ExecutionCodeНовосиб/Voronezh.R')
source('~/R/ExecutionCodeНовосиб/Voronezh.R')
source('~/R/ExecutionCode/Voronezh.R')
install.packages("pspline")
install.packages("rms")
install.packages("forecast")
source('~/R/ExecutionCode/Voronezh.R')
source('~/R/ExecutionCode/Voronezh.R')
source('~/R/ExecutionCode/estimate_model.R')
source('~/R/ExecutionCode/filtered_temp.R')
source('~/R/ExecutionCode/Luminosity.R')
source('~/R/ExecutionCode/model_initialization.R')
source('~/R/ExecutionCode/Voronezh.R')
source('~/R/ExecutionCode/Voronezh.R')
source('~/R/ExecutionCode/Voronezh.R')
source('~/R/ExecutionCode/estimate_model.R')
source('~/R/ExecutionCode/Voronezh.R')
debugSource('~/R/ExecutionCode/Voronezh.R')
debugSource('~/R/ExecutionCode/Voronezh.R')
debugSource('~/R/ExecutionCode/Voronezh.R')
source('~/R/ExecutionCode/estimate_model.R')
debugSource('~/R/ExecutionCode/Voronezh.R')
source('~/R/ExecutionCode/estimate_model.R')
source('~/R/ExecutionCode/Voronezh.R')
debugSource('~/R/ExecutionCode/Voronezh.R')
source('~/R/ExecutionCode/estimate_model.R')
debugSource('~/R/ExecutionCode/Voronezh.R')
Q
source('~/R/ExecutionCode/Voronezh.R')
View(HolidaysSchedule)
number1 = 7
number2 = 5
number3 = 4
result <- number3 < number1 + number2
print(result)
my_vector <- c(-32, 45 , 23 ,234)
my_vector[1]
my_vector[1,2,3]
my_vector[c(1,2,3)]
v1 <- 1:50
v2 <- 60:100
v3 <- v1+v2
print(v3)
v1 <- 1:50
v2 <- 60:100
v3 <- c(v1)+c(v2)
print(v3)
v1 <- 1:50
v2 <- 60:100
v3 <- v1:v2
print(v3)
v1 <- 1:50
v2 <- 60:100
v3 <- c(v1,v2)
print(v3)
print(my_vector(c(2,5,7,9,12,16,20)))
my_vector = 1:20
print(my_vector(c(2,5,7,9,12,16,20)))
my_vector(c(1,3))
my_vector[c(1,3)]
print(my_vector[c(2,5,7,9,12,16,20)])
my_vector >0
my_vector[my_vector >0]
my_vector[my_vector >5]
my_vector[my_vector > 10]
sum(my_vector[my_vector > 10])
my_sum <- sum(my_vector[my_vector > 10])
print(my_sum)
data <- list(age,is_married)
age <- c(16,18,22,28)
is_married <- c(F,F,T,T)
data <- list(age,is_married)
data <- list(age,is_married)
data
data[[1]][1]
data[[2]][3]
name <- c("Olga","Maria","T","Popnya")
data <- list(age,is_married,name)
data
df <- data.frame(Name = name, Age = age, Status = is_married)
View(df)
View(df)
typeof(df)
mean(my_vector)-sd(my_vector)
my_vector>mean(my_vector)-sd(my_vector)
my_vector>mean(my_vector)+sd(my_vector)
mean(my_vector)+sd(my_vector)
norma <- my_vector[my_vector>mean(my_vector)-sd(my_vector) & my_vector>mean(my_vector)+sd(my_vector)]
print(norma)
norma <- my_vector[my_vector>mean(my_vector)-sd(my_vector) & my_vector<mean(my_vector)+sd(my_vector)]
print(norma)
print(cbind(df[c(3,7,10,12),] ,tail(df, 1)))
df <- mtcars
print(cbind(df[c(3,7,10,12),] ,tail(df, 1)))
df[c(3,7,10,12),]
cbind
(
df[c(3,7,10,12),] ,tail(df, 1)
)
cbind
(
df[c(3,7,10,12),] ,tail(df, 1)
)
cbind  (  df[c(3,7,10,12),] ,tail(df, 1)  )
rbind  (  df[c(3,7,10,12),] ,tail(df, 1)  )
a <- 10
ifelse(a > 0, 'positive', 'not positive')
a <- c(1, -1)
ifelse(a > 0, 'positive', 'not positive')
for (i in 1:100){
print(i)
}
for (i in 1:nrow(mydata)){
if (mydata$gender[i] == 'male'){
print(mydata$score[i])
}
}
mydata <- read.csv('evals.csv')
setwd("~/R/Анализ данных в R/1.4 Элементы синтаксиса")
setwd("~/R/Анализ данных в R/1.4 Элементы синтаксиса")
mydata <- read.csv('evals.csv')
for (i in 1:nrow(mydata)){
if (mydata$gender[i] == 'male'){
print(mydata$score[i])
}
}
for (i in 1:nrow(mydata)){
print(mydata$score[i])
}
mydata$quality <- rep(NA, nrow(mydata))
while(i < 51){
print(mydata$score[i])
i <- i+1
}
while(i < 51){
print(mydata$score[i])
i <- i+1
}
i <- 1
while(i < 51){
print(mydata$score[i])
i <- i+1
}
ifelse(df$carb >= 4 | df$cyl>6, 1, 0)
df$new_var <- ifelse(df$carb >= 4 | df$cyl>6, 1, 0)
View(df)
?AirPassengers
d <- AirPassengers
(fit <- arima(log10(AirPassengers), c(0, 1, 1),
seasonal = list(order = c(0, 1, 1), period = 12)))
View(LS)
print(d)
print.d
as.d
is.d
myts2 <- window(d, start=c(1941, 1), end=c(1960, 12))
d[1]
d[13]
nrow(d)
length(d)
for (i in 1:length(d)){
if (d[i+i]>d[i]) print (d[i])
}
if (d[i+i]>d[i]) print (d[i+1])
for (i in 1:length(d)){
if (d[i+i]>d[i]) print (d[i+1])
}
for (i in 1:length(d) & i<length(d)){
if (d[i+i]>d[i]) print (d[i+1])
}
for (i in 1:length(d) ){
if (i != length(d)){
if (d[i+i]>d[i]) print (d[i+1])
}
}
for (i in 1:length(d) ){
if (i != length(d)){
if (d[i+i]>d[i]) print (d[i+1])
}
}
}
for (i in 1:length(d) ){
if (i != length(d)){
if (d[i+i]>d[i]) print (d[i+1])
}
}
for (i in 1:length(d) ){
if (i != length(d)){
if (d[i+i]>d[i]) print (d[i+1])
}
}
d[length(d)]
d
1:length(d)
if (d[i+i]>d[i]) print (d[i+1])
if (d[i+i]>d[i]) print (d[i+1])
for (i in 1:length(d) )
{
if (i != length(d))
{
if (d[i+i]>d[i]) {print (d[i+1])}
}
}
print (d[i+1])
for (i in 1:length(d)
{
if (i != length(d))
{
#if (d[i+i]>d[i])
print (d[i+1])
}
}
