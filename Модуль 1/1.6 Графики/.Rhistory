v2 <- 60:100
v3 <- v1:v2
print(v3)
v1 <- 1:50
v2 <- 60:100
v3 <- c(v1,v2)
print(v3)
print(my_vector(c(2,5,7,9,12,16,20)))
my_vector = 1:20
print(my_vector(c(2,5,7,9,12,16,20)))
my_vector(c(1,3))
my_vector[c(1,3)]
print(my_vector[c(2,5,7,9,12,16,20)])
my_vector >0
my_vector[my_vector >0]
my_vector[my_vector >5]
my_vector[my_vector > 10]
sum(my_vector[my_vector > 10])
my_sum <- sum(my_vector[my_vector > 10])
print(my_sum)
data <- list(age,is_married)
age <- c(16,18,22,28)
is_married <- c(F,F,T,T)
data <- list(age,is_married)
data <- list(age,is_married)
data
data[[1]][1]
data[[2]][3]
name <- c("Olga","Maria","T","Popnya")
data <- list(age,is_married,name)
data
df <- data.frame(Name = name, Age = age, Status = is_married)
View(df)
View(df)
typeof(df)
mean(my_vector)-sd(my_vector)
my_vector>mean(my_vector)-sd(my_vector)
my_vector>mean(my_vector)+sd(my_vector)
mean(my_vector)+sd(my_vector)
norma <- my_vector[my_vector>mean(my_vector)-sd(my_vector) & my_vector>mean(my_vector)+sd(my_vector)]
print(norma)
norma <- my_vector[my_vector>mean(my_vector)-sd(my_vector) & my_vector<mean(my_vector)+sd(my_vector)]
print(norma)
for (i in 1:length(d)
{
if (i != length(d))
{
#if (d[i+i]>d[i])
print (d[i+1])
}
}
d <- AirPassengers
for (i in 1:length(d)){
print(d[i])
}
for (i in 1:length(d)){
if (i != length(d)) {print(d[i])}
}
for (i in 1:length(d)){
if (i != length(d)) {
if (d[i+1]>d[i])print(d[i])}
}
d <- AirPassengers
for (i in 1:length(d)){
if (i != length(d)) {
if (d[i+1]>d[i])print(d[i])}
}
d
d <- AirPassengers
for (i in 1:length(d)-10){
print(mean(d[i:i+10]))
}
for (i in 1:length(d)-10){
print(mean(d[i:i+10]))}
d[i:i+10]
d[1:10]
mean(d[1:10])
i<-1
mean(d[i:(i+10)])
mean(d[i:(i+10)])
mean(d[i:(i+10)])
i<-1
mean(d[i:(i+10)])
i<-1
mean(d[1:(i+10)])
i<-1
mean(d[i:10])
mean(d[i:10+i])
i<-1
mean(d[i:10+i])
install.packages("astsa")
i<-1
mean(d[i:10+i])
d[i:10+i]
i<-1
mean(d[i:9+i])
i<-1
mean(d[i:(i+9)])
i<-2
mean(d[i:(i+9)])
d <- AirPassengers
for (i in 1:length(d)-10){
print(mean(d[i:(i+9)]))}
for (i in 1:length(d)-9){
print(mean(d[i:(i+9)]))}
mean(d[i:(i+9)])
d <- AirPassengers
for (j in 1:length(d)-9){
print(mean(d[j:(j+9)]))}
d
d <- AirPassengers
for (j in 1:length(d)-9){
print(mean(d[j:(j+9)]))
}
d <- AirPassengers
for (j in 1:length(d)-9){
print(mean(d[j:(j+9)]))
}
d[j:(j+9)]
d[j:j+9]
d[j:j+9]
j <- 1
d[j:j+9]
d[j:j+9]
d[1:10]
d[j:10]
d[j:j+1]
d[j:j+9]
d[1:(10)]
mean(d[i:(i+9)])
i <- 1
mean(d[i:(i+9)])
d <- AirPassengers
for (i in 1:length(d)-9){
print(mean(d[i:(i+9)]))}
d <- AirPassengers
for (i in 1:length(d)-9){
print(mean(d[(i):(i+9)]))}
d <- AirPassengers
for (i in 1:length(d)-9){
b <- d[i:i+9]
print(b)
#print(mean(d[(i):(i+9)]))
}
d <- AirPassengers
for (i in 1:length(d)-9){
b <- d[i:(i+9)]
print(b)
#print(mean(d[(i):(i+9)]))
}
for (i in 1:length(AirPassengers)-9){
b <- AirPassengers[i:(i+9)]
print(b)
#print(mean(d[(i):(i+9)]))
}
nrow(AirPassengers)
b <- AirPassengers[i]:AirPassengers[(i+9)]
i <- 1
b <- AirPassengers[i]:AirPassengers[(i+9)]
b <- AirPassengers[i:10]
i <- 1
b <- AirPassengers[i:(i+9)]
i <- 2
b <- AirPassengers[i:(i+9)]
i <- 2
b <- AirPassengers[i:(i+9)]
print(mean(b))
for (i in 1:length(AirPassengers)-9){
b <- AirPassengers[i:(i+9)]
print(mean(b))
print(b)
#print(mean(d[(i):(i+9)]))
}
for (i in 1:length(AirPassengers)-9){
b <- AirPassengers[i:(i+9)]
print(mean(b))
print(b)
#print(mean(d[(i):(i+9)]))
}
for (i in 1:length(AirPassengers)-9){
b <- AirPassengers[i:(i+9)]
#print(mean(b))
#print(b)
}
d <- AirPassengers
for (i in 1:length(AirPassengers)-9){
b <- AirPassengers[i:(i+9)]
#print(mean(b))
#print(b)
}
d <- AirPassengers
for (i in 1:length(AirPassengers)-9){
b <- (AirPassengers[i:(i+9)])
#print(mean(b))
#print(b)
}
d <- AirPassengers
for (i in 1:length(AirPassengers)-9){
b <- AirPassengers[c(i:(i+9))]
#print(mean(b))
#print(b)
}
d <- AirPassengers
for (i in 1:length(AirPassengers)-9){
b <- AirPassengers[i:(i+9)]
#print(mean(b))
#print(b)
}
d <- AirPassengers
for (i in 1:length(AirPassengers)-9){
b <- AirPassengers[i:(i +9)]
#print(mean(b))
#print(b)
}
d <- AirPassengers
for (i in 1:length(AirPassengers)-9){
b <- AirPassengers[i : (i +9)]
#print(mean(b))
#print(b)
}
for (i in 1:length(AirPassengers)-9){
print(AirPassengers[i : (i +9)])
#print(mean(b))
#print(b)
}
AirPassengers[i : (i +9)]
for (i in 1:length(AirPassengers)-9){
AirPassengers[i : (i +9)]
#print(mean(b))
#print(b)
}
for (i in 1:length(AirPassengers)-9){
AirPassengers[i : (i +9)]}
#print(mean(b))
#print(b)
for (i in 1:length(AirPassengers)-9){
AirPassengers[i : (i +9)]
print(mean(b))}
for (i in 1:(length(AirPassengers)-9){
AirPassengers[i : (i +9)]
print(mean(b))}
for (i in 1:length(AirPassengers){
AirPassengers[i : (i +9)]
print(mean(b))}
for (i in 1:length(AirPassengers){
AirPassengers[1 : 10]
print(mean(b))}
for (i in 1:length(AirPassengers){
b <- AirPassengers[1 : 10]
print(mean(b))}
for (i in 1:length(AirPassengers){
b <- mean(AirPassengers[1 : 10])
print(b)}
for (i in 1:length(AirPassengers){
b <- mean(AirPassengers[1 : 10])
print(b)
}
for (i in 1:length(AirPassengers){
b <- mean(AirPassengers[1 : 10])
print(b)}
for (i in 1:length(AirPassengers)
{
b <- mean(AirPassengers[1 : 10])
print(b)
}
for (i in 1:length(AirPassengers){     {
b <- mean(AirPassengers[1 : 10])
print(b)}
for (i in 1:length(AirPassengers){
b <- mean(AirPassengers[1 : 10])
print(b)}
for (i in 1:length(AirPassengers)){
b <- mean(AirPassengers[1 : 10])
print(b)}
for (i in 1:length(AirPassengers)){
b <- mean(AirPassengers[i : 10])
print(b)}
for (i in 1:length(AirPassengers)){
b <- mean(AirPassengers[i : (i+9)])
print(b)}
for (i in 1:length(AirPassengers)-9){
b <- mean(AirPassengers[i : (i+9)])
print(b)}
length(AirPassengers)-9
for (i in 1:(length(AirPassengers)-9){
b <- mean(AirPassengers[i : (i+9)])
print(b)}
for (i in 1:(length(AirPassengers)-9)){
b <- mean(AirPassengers[i : (i+9)])
print(b)}
setwd("~/R/Анализ данных в R/1.5 Описательные статистики")
df  <- mtcars
str(df)
df$vs  <- factor(df$vs  , labels = c("V", "S"))
str(df)
df$am  <- factor(df$am  , labels = c("Auto", "Manual"))
str(df)
median(df$mpg)
mean(df$disp)
sd(df$hp)
range(df$cyl)
mean_disp  <- mean(df$disp)
mean(df$mpg[df$cyl == 6])
mean(df$mpg[df$cyl == 6 & df$vs == "V"])
sd(df$hp[df$cyl != 3 & df$am == "Auto"])
df <- mtcars
mean(df$qsec[df$cyl!=3 & df$mpg > 20])
?aggregate
mean_hp_vs  <- aggregate(x = df$hp, by = list(df$vs), FUN = mean)
View(mean_hp_vs)
colnames(mean_hp_vs)  <- c("VS", "Mean HP")
View(mean_hp_vs)
aggregate(hp ~ vs, df, mean)
aggregate(hp ~ vs + am, df, mean)
aggregate(x = df$hp, by = list (df$vs, df$am), FUN = mean)
aggregate(x = df[,-c(8,9)], by = list(df$am), FUN = median)
aggregate(df[,c(1,3)], by = list(df$am, df$vs), FUN = sd)
aggregate(cbind(mpg, disp) ~ am + vs, df, sd)
aggregate(cbind(hp,disp) ~ am, df, sd)
install.packages(c("psych", "ggplot2"))
library(psych)
?describe
describe(x = df)
descr2  <- describeBy(x = df[,-c(8,9)], group = df$vs)
describeBy(x = df[,-c(8,9)], group = df$vs)
descr2$V
descr2  <- describeBy(x = df[,-c(8,9)], group = df$vs)
descr2$V
descr2  <- describeBy(x = df[,-c(8,9)], group = df$vs)
descr2$1
descr2$"1"
descr2$"0"
descr2  <- describeBy(x = df[,-c(8,9)], group = df$vs, mat = T, digits = 1)
describeBy(x = df[,-c(8,9)], group = df$vs, mat = T, digits = 1)
descr3  <- describeBy(x = df[,-c(8,9)], group = df$vs, mat = T, digits = 1, fast = T)
View(descr3)
describeBy(df$qsec, group = list(df$vs, df$am), digits = 1, fast = T)
is.na(df)
sum(is.na(df))
df$mpg[1:10]  <- NA
sum(is.na(df))
mean(df$mpg, na.rm = T)
aggregate(mpg ~am, df, sd)
describe(na.rm = T)
describe(df,na.rm = T)
df <- airquality
df
?airquality
View(df)
df$Month[c(7:9)]
df$Month == c(7:9)
df[df$Month == c(7:9)]
df(df$Month == c(7:9))
subset(df,df$Month == c(7:9))
View(df)
subset(df,Month == c(7:9))
subset(df,Month == 7:9)
subset(df,Month >= 7)
df <- airquality
?airquality
new_df <- subset(df,Month >= 7 | Month < 9)
View(new_df)
subset(df,Month >= 7 | Month < 9)
new_df <- subset(df,Month >= 7 & Month < 9)
new_df <- subset(df,Month >= 7 & Month < 9)
aggregate(Ozone ~ Month, new_df, length)
= 9)
aggregate(Ozone ~ Month, new_df, length)
new_df <- subset(df,Month >= 7 & Month <= 9)
aggregate(Ozone ~ Month, new_df, length)
describeBy(df,Month)
describeBy(df,df$Month)
df <-iris
df
head(df)
sd(x = df,na.rm = T)
sd(x = df)
sd(x = df$Sepal.Length)
sd(x = df$Sepal.Width)
sd(x = df$Petal.Length)
head(df)
tail(df)
aggregate(x = df, by = list(df$Species), FUN = median)
df$Species <- factor(df$Species  , labels = c(0, 1))
sd(df$hp[df$cyl != 3 & df$am == "Auto"])
mean(df$mpg[df$cyl == 6 & df$vs == "V"])
df  <- mtcars
sd(df$hp[df$cyl != 3 & df$am == "Auto"])
mean(df$mpg[df$cyl == 6 & df$vs == "V"])
df  <- mtcars
str(df)
df$vs  <- factor(df$vs  , labels = c("V", "S"))
df$am  <- factor(df$am  , labels = c("Auto", "Manual"))
median(df$mpg)
mean(df$disp)
sd(df$hp)
range(df$cyl)
mean_disp  <- mean(df$disp)
mean(df$mpg[df$cyl == 6])
mean(df$mpg[df$cyl == 6 & df$vs == "V"])
aggregate(x = df$hp, by = list(df$vs), FUN = mean)
df1 <-iris
aggregate(x = df1, by = list(df1$Species), FUN = median())
aggregate(x = df1, by = list(df1$Species), FUN = median
aggregate(x = df1, by = list(df1$Species), FUN = median)
aggregate(df[,-c(5)], by = list(df1$Species), FUN = median)
aggregate(x=df[,-c(5)], by = list(df1$Species), FUN = median)
aggregate(x=df1[,-c(5)], by = list(df1$Species), FUN = median)
aggregate(x=df1[,-c(5)], by = list(df1$Species[df1$Species == "verginica"]), FUN = median)
aggregate(x=df1[,-c(5)], by = list(df1$Species), FUN = median)
describe(my_vector,na.rm = mean(my_vector, na.rm = T))
my_vector
my_vector[6] = NA
my_vector
describe(my_vector,na.rm = mean(my_vector, na.rm = T))
my_vector
mean(my_vector, na.rm = T)
describe(my_vector,na.rm = mean(my_vector, na.rm = T))
describe(my_vector,na.rm = mean(my_vector, na.rm = T))
m <- mean(my_vector, na.rm = T)
for (i in 1:nrow(my_vector)){
if (is.na(x = my_vector[i])){
my_vector[i]= m }}
nrow(my_vector)
length(my_vector)
m <- mean(my_vector, na.rm = T)
for (i in 1:length(my_vector)){
if (is.na(x = my_vector[i])){
my_vector[i]= m }}
my_vector
setwd("~/R/Анализ данных в R/1.6 Графики")
hist(df$mpg)
hist(df$mpg,breaks = 20)
boxplot(mpg ~ am, df)
boxplot(mpg ~ am, df, ylab = "MPG")
plot(df$mpg, df$hp)
hist(df$mpg, breaks = 20, xlab = "MPG", main ="Histogram of MPG",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
plot(density(df$mpg), xlab = "MPG", main ="Density of MPG",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
boxplot(mpg ~ am, df, ylab = "MPG", main ="MPG and AM",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
boxplot(df$mpg[df$am == "Auto"], df$mpg[df$am == "Manual"], ylab = "MPG", main ="MPG and AM",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
boxplot(df$mpg[df$am == "Auto"], df$mpg[df$am == "Manual"], ylab = "MPG", main ="MPG and AM",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
plot(df$mpg, df$hp, xlab = "MPG", ylab ="HP" , main ="MPG and HP", pch = 22)
ggplot(df, aes(x = mpg))+
geom_histogram()
ggplot(df, aes(x = mpg))+
geom_histogram()
library(ggplot2)
ggplot(df, aes(x = mpg))+
geom_histogram()
geom_histogram(fill = "white", col = "black")
ggplot(df, aes(x = mpg))+
geom_histogram(fill = "white", col = "black")
ggplot(df, aes(x = mpg))+
geom_histogram(fill = "white", col = "black", binwidth = 2)
ggplot(df, aes(x = mpg, fill = am))+
geom_dotplot()
ggplot(df, aes(x = mpg))+
geom_dotplot()
ggplot(df, aes(x = mpg))+
geom_density(fill = "red")
df <- airquality
ggplot(df, aes(x = Month, y = Ozone))+
geom_boxplot()
df
df  <- mtcars
ggplot(df, aes(x = am, y = hp, fill = vs))+
geom_boxplot()+
xlab("Transmission type")+
ylab("Gross horsepower")+
scale_fill_discrete(name="Engine type")+
ggtitle("Gross horsepower and engine type")
boxplot(mpg ~ am, df, ylab = "MPG", main ="MPG and AM",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
boxplot(Month ~ Ozon, df)
df <- airquality
boxplot(Month ~ Ozon, df)
df
boxplot(Month ~ Ozone, df)
boxplot(Ozone ~ Month, df)
df <- mtcars
plot1 <- ggplot(df, aes(x = mpg, y = disp, color = hp))+
geom_point()
plot1
df <- mtcars
plot1 <- ggplot(df, aes(x = mpg, y = disp, color = hp))+
geom_point(size = 6)
plot1
df <- mtcars
plot1 <- ggplot(df, aes(x = mpg, y = disp, color = hp))+
geom_point(size = 5)
plot1
df <- mtcars
plot1 <- ggplot(df, aes(x = mpg, y = disp, color = hp))+
geom_point(size = 3)
plot1
df <- iris
ggplot(iris, aes(Sepal.Length, fill = Species)) + geom_histogram()
df <- iris
ggplot(iris, aes(Sepal.Length, col = Species)) + geom_histogram()
df <- iris
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
df <- iris
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
df <- iris
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(col = Species))
df <- iris
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
